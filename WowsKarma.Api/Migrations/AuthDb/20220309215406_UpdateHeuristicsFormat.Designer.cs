// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WowsKarma.Api.Data;

#nullable disable

namespace WowsKarma.Api.Migrations.AuthDb
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20220309215406_UpdateHeuristicsFormat")]
    partial class UpdateHeuristicsFormat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("auth")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<byte>("RolesId")
                        .HasColumnType("smallint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser", "auth");
                });

            modelBuilder.Entity("WowsKarma.Api.Data.Models.Auth.Role", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<byte>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles", "auth");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            DisplayName = "Administrator",
                            InternalName = "admin"
                        },
                        new
                        {
                            Id = (byte)2,
                            DisplayName = "Community Manager",
                            InternalName = "mod"
                        });
                });

            modelBuilder.Entity("WowsKarma.Api.Data.Models.Auth.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<Instant>("LastTokenRequested")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("SeedToken")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Users", "auth");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("WowsKarma.Api.Data.Models.Auth.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WowsKarma.Api.Data.Models.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
