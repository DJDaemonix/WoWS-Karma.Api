@using WowsKarma.Web.Infrastructure.Exceptions;
@inject IJSRuntime JSRuntime;
@inject IConfiguration Configuration;

@if (Exception is not null)
        {
        	<div class="position-fixed bottom-0 start-50 translate-middle-x pt-3">
        		<div id="error-toast" class="toast show vw-100" role="alert" aria-live="assertive" aria-atomic="true">
        			<div class="toast-header text-danger">
	                    @if (ApiErrorException is not null)
	                    {
		                    <strong class="me-auto">API returned an error:<span class="ms-3 font-monospace">@ApiErrorException.ApiError.Type</span></strong>
	                    }
	                    else
	                    {
		                    <strong class="me-auto">Error caught:<span class="ms-3 font-monospace">@Exception.GetType().Name</span></strong>
	                    }
	                    
	                    @if (_copiedException)
	                    {
		                    <span class="text-success">
			                    <i class="bi bi-check"></i>
		                    </span>
	                    }
	                    
	                    <button type="button" class="btn btn-sm btn-primary ms-1 me-2" @onclick=CopyExceptionToClipboard>
                            <i class="bi bi-clipboard me-1"></i>Copy
                        </button>
	                    
	                    <button type="button" class="btn btn-sm btn-danger" @onclick=DismissToast>
		                    <i class="bi bi-x"></i>
	                    </button>
        			</div>
	                <div class="toast-body overflow-auto" style="max-height:25vh!important;">
		                @if (ApiErrorException?.ApiError?.Instance is { } path)
		                {
			                <span class="text-info"><b class="me-3">API Request :</b><a href=@path target="_blank" class="link-info font-monospace">@path</a></span>
		                }
		                
		                <h6 class="text-danger" style="white-space: pre-wrap;">@Exception.Message</h6>
		                <p class="font-monospace small" style="white-space: pre-wrap;">@Exception.StackTrace</p>
	                </div>
        		</div>
        	</div>
        }

@code {
	[Parameter] public Exception Exception { get; set; }
	public ApiErrorResponseException ApiErrorException => Exception as ApiErrorResponseException;
	
	
	private bool _copiedException;

	public void SetException(Exception e)
	{
		Exception = e;
		StateHasChanged();
	}

	public void DismissToast()
	{
		Exception = null;
		StateHasChanged();
	}
	
	private async Task CopyExceptionToClipboard()
	{
		string exceptionText = ApiErrorException is null 
			? $"```\n{Exception}\n```"
			: $"```\nAPI Request: {ApiErrorException.ApiError.Instance}\n\n{Exception}\n```";
		
		await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", exceptionText);
		_copiedException = true;
	}
}