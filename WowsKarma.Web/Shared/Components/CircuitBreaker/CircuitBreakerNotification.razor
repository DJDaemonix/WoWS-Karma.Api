@inject IJSRuntime JSRuntime

@if (Exception is not null)
        {
        	<div class="position-fixed bottom-0 start-50 translate-middle-x pt-3">
        		<div id="error-toast" class="toast show vw-100" role="alert" aria-live="assertive" aria-atomic="true">
        			<div class="toast-header text-danger">
	                    <strong class="me-auto">Error caught:<span class="ms-3 font-monospace">@Exception.GetType().Name</span></strong>
	                    
	                    @if (_copiedException)
	                    {
		                    <span class="text-success">
			                    <i class="bi bi-check"></i>
		                    </span>
	                    }
	                    
	                    <button type="button" class="btn btn-sm btn-primary ms-1 me-2" @onclick=CopyExceptionToClipboard>
                            <i class="bi bi-clipboard me-1"></i>Copy
                        </button>
	                    
	                    <button type="button" class="btn btn-sm btn-danger" @onclick=DismissToast>
		                    <i class="bi bi-x"></i>
	                    </button>
        			</div>
        			<div class="toast-body overflow-auto" style="max-height:25vh!important;">
	                    <h6 class="text-danger" style="white-space: pre-wrap;">@Exception.Message</h6>
	                    <p class="font-monospace small" style="white-space: pre-wrap;">@Exception.StackTrace</p>
                    </div>
        		</div>
        	</div>
        }

@code {
	[Parameter] public Exception Exception { get; set; }

	private bool _copiedException;
	
	public void SetException(Exception e)
	{
		Exception = e;
		StateHasChanged();
	}

	public void DismissToast()
	{
		Exception = null;
		StateHasChanged();
	}
	
	private async Task CopyExceptionToClipboard()
	{
		await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", $"```\n{Exception}\n```");
		_copiedException = true;
	}
}